#include <iostream>

class A {
public:
    virtual void foo() {
        std::cout << "A::foo" << std::endl;
    }
};

class B : public virtual A {
public:
    void foo() override {
        std::cout << "B::foo" << std::endl;
    }
};

class C : public virtual A {
public:
    void foo() override {
        std::cout << "C::foo" << std::endl;
    }
};

class D : public B, public C {
public:
    void foo() override {
        std::cout << "D::foo" << std::endl;
    }
};

int main() {
    D d;
    d.foo(); // Output: D::foo

    A* a = &d;
    a->foo(); // Output: D::foo, risolto dinamicamente attraverso la vtable

    B* b = &d;
    b->foo(); // Output: D::foo

    C* c = &d;
    c->foo(); // Output: D::foo

    return 0;
}

